name = "Avg. Income",
data = round(avg_income_region$avg_income),
colorByPoint = TRUE
)) |>
hc_colors(colorRampPalette(c("#FF5A5F", "#FFB3B3"))(nrow(avg_income_region))) |>
hc_plotOptions(column = list(
borderRadius = 2,
pointWidth = 12
)) |>
hc_tooltip(pointFormat = "Avg. Income: <b>{point.y:,.0f}</b>")
})
output$incomeThree_chart <- renderHighchart({
current_data <- filtered_data()
req(nrow(current_data) > 0)
income_capita_region <- current_data |>
group_by(Region) |>
summarise(income_capita = sum(`Total Household Income`, na.rm = TRUE) / n()) |>
arrange(desc(income_capita))
if (nrow(income_capita_region) == 0 || all(is.na(income_capita_region$income_capita))) {
return(highchart() |> hc_title(text = "Income Per Capita") |> hc_subtitle(text = "No data for selected filters"))
}
gradient_color <- list(
radialGradient = list(cx = 0.5, cy = 0.5, r = 0.7),
stops = list(
list(0, "rgba(255, 90, 95, 0.9)"),   # center, more opaque
list(1, "rgba(255, 90, 95, 0.3)")    # edge, more transparent
)
)
highchart() |>
hc_chart(polar = TRUE, type = "column") |>
hc_title(text = NULL) |>
hc_xAxis(
categories = income_capita_region$Region,
tickmarkPlacement = "on",
lineWidth = 0
) |>
hc_yAxis(
gridLineInterpolation = "polygon",
lineWidth = 0,
min = 0,
max = max(income_capita_region$income_capita) * 1.1
) |>
hc_series(list(
name = "Income per Capita",
data = round(income_capita_region$income_capita, 2),
pointPlacement = "on",
color = gradient_color
)) |>
hc_plotOptions(
column = list(
pointPadding = 0,
groupPadding = 0,
borderWidth = 0
)
) |>
hc_legend(enabled = FALSE)
})
output$expenditureOne_chart <- renderHighchart({
current_data <- filtered_data()
req(nrow(current_data) > 0)
total_expenditure = current_data |>
group_by(Region) |>
summarise(total = sum(`Total Expenditure`)) |>
arrange(desc(total))
if (nrow(total_expenditure) == 0) {
return(highchart() |> hc_title(text = "Total Household Expenditure by Region") |> hc_subtitle(text = "No data for selected filters"))
}
highchart() |>
hc_chart(type = "column") |>
hc_title(text = "Total Household Expenditure by Region") |>
hc_xAxis(
categories = total_expenditure$Region,
title = list(text = "Region")
) |>
hc_yAxis(
title = list(text = "Total Expenditure"),
labels = list(format = "{value:,.0f}", rotation = -45)
) |>
hc_series(list(
name = "Total Expenditure",
data = round(total_expenditure$total),
colorByPoint = TRUE
)) |>
hc_colors(colorRampPalette(c("#1F9CEB", "#6F9CEB"))(nrow(total_expenditure))) |>
hc_plotOptions(column = list(
pointWidth = 30,
borderRadius = 2
)) |>
hc_tooltip(pointFormat = "Total: <b>{point.y:,.0f}</b>")
})
output$expenditureTwo_chart <- renderHighchart({
current_data <- filtered_data()
req(nrow(current_data) > 0)
expenditure_type <- current_data |>
summarise(across(c(
`Bread and Cereals Expenditure`,
`Total Rice Expenditure`,
`Meat Expenditure`,
`Total Fish and  marine products Expenditure`,
`Fruit Expenditure`,
`Vegetables Expenditure`,
`Restaurant and hotels Expenditure`,
`Alcoholic Beverages Expenditure`,
`Tobacco Expenditure`,
`Clothing, Footwear and Other Wear Expenditure`,
`Housing and water Expenditure`,
`Imputed House Rental Value`,
`Medical Care Expenditure`,
`Transportation Expenditure`,
`Communication Expenditure`,
`Education Expenditure`,
`Miscellaneous Goods and Services Expenditure`,
`Special Occasions Expenditure`,
`Crop Farming and Gardening expenses`
), sum, na.rm = TRUE))
expenditure_long <- expenditure_type |>
pivot_longer(cols = everything(), names_to = "category", values_to = "value") |>
filter(value > 0)
if (nrow(expenditure_long) == 0) {
return(highchart() |> hc_title(text = "Household Expenditure Treemap") |> hc_subtitle(text = "No expenditure data for selected filters"))
}
highchart() |>
hc_chart(type = "treemap") |>
hc_title(text = "Household Expenditure Treemap") |>
hc_plotOptions(
treemap = list(
layoutAlgorithm = "squarified",
allowDrillToNode = TRUE,
dataLabels = list(
enabled = TRUE,
format = '{point.name}'
)
)
) |>
hc_series(
list(
type = "treemap",
layoutAlgorithm = "squarified",
allowDrillToNode = TRUE,
levelIsConstant = FALSE,
levels = list(
list(level = 1, dataLabels = list(enabled = TRUE))
),
data = lapply(1:nrow(expenditure_long), function(i) {
list(
name = expenditure_long$category[i],
value = expenditure_long$value[i],
colorValue = expenditure_long$value[i]  # Used for palette coloring
)
})
)
) |>
hc_colorAxis(
stops = list(
list(0.0, "#E8F7EE"),
list(0.5, "#FF5A5F"),
list(1.0, "#6F9CEB")
)
)
})
output$expenditureThree_chart <- renderHighchart({
current_data <- filtered_data()
req(nrow(current_data) > 0)
family_expenditure <- current_data |>
group_by(Region) |>
summarise(avg_expenditure = mean(`Total Expenditure`, na.rm = TRUE),
avg_member = mean(`Total Number of Family members`, na.rm = TRUE)) |>
arrange(desc(avg_member))
highchart() |>
hc_chart(type = "bar") |>
hc_title(text = "Average Expenditure and Family Size by Region") |>
hc_xAxis(
categories = family_expenditure$Region,
title = list(text = "Region")
) |>
hc_yAxis_multiples(
list( # Axis 0: for expenditure
title = list(text = "Average Expenditure"),
opposite = FALSE
),
list( # Axis 1: for family size
title = list(text = "Average Family Size"),
opposite = TRUE
)
) |>
hc_plotOptions(bar = list(grouping = TRUE)) |>
hc_series(
list(
name = "Avg Expenditure",
data = round(family_expenditure$avg_expenditure, 2),
yAxis = 0
),
list(
name = "Avg Family Size",
data = round(family_expenditure$avg_member, 1),
yAxis = 1
)
) |>
hc_tooltip(shared = TRUE, crosshairs = TRUE)
})
output$source_chart <- renderHighchart({
current_data <- filtered_data()
req(nrow(current_data) > 0)
income_source_region <- current_data |>
group_by(`Main Source of Income`) |>
summarise(count = n()) |>
filter(count > 0)
if (nrow(income_source_region) == 0) {
return(highchart() |> hc_title(text = "Source of Income") |> hc_subtitle(text = "No data for selected filters"))
}
highchart() |>
hc_chart(type = "pie") |>
hc_title(text = "Source of Income") |>
hc_plotOptions(
pie = list(
innerSize = '40%',
dataLabels = list(enabled = TRUE, format = '<b>{point.name}</b>: {point.y}'),
showInLegend = TRUE
)
) |>
hc_series(
list(
name = "Count",
colorByPoint = TRUE,
data = list_parse2(income_source_region)
)
) |>
hc_colors(c("#E8F7EE", "#FF5A5F", "#6F9CEB"))
})
}
runApp()
runApp()
library(shiny)
library(bslib)
library(highcharter)
library(plotly)
library(leaflet)
library(fontawesome)
page_navbar(
title = "PIED",
theme = bs_theme(
version = 5,
base_font = font_google("DM Sans"),
primary = "#0d6efd",
bg = "#f8f9fa",
fg = "#212529"
),
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
nav_panel(
title = "Dashboard",
icon = icon("chart-line"),
layout_sidebar(
sidebar = sidebar(
title = "Filters",
width = 300,
selectInput("region", "Select Region:",
choices = c("All", "Luzon", "Visayas", "Mindanao"),
selected = "All"),
selectInput("family_type", "Type of Family:",
choices = c("All", "Extended Family", "Single Family", "Two or More Nonrelated Persons/Members"),
selected = "All"),
selectInput("head_sex", "Household Head Sex:",
choices = c("All", "Male", "Female"),
selected = "All"),
selectInput("building_type", "Type of Building/House:",
choices = c("Single House", "Duplex", "Commercial/industrial/agricultural building", "Multi-unit residential", "Institutional Living Quarter", "Other building unit (e.g. cave, boat)"),
selected = "All"),
hr(),
actionButton("apply_filters", "Apply Filters",
class = "btn-primary w-100")
),
# Main content needs to be here inside the layout_sidebar
div(
div(class = "page-header mb-4",
h2("Philippine Income & Expenditure Dashboard", class = "header-title"),
p("Interactive visualizations of household income and expenditure data", class = 'text-center')
),
div(
layout_columns(
col_widths = 12,
uiOutput("avg_household_income")
)
),
layout_columns(
col_widths = c(5, 7),
card(
card_header("Regional Map of Philippines"),
leafletOutput("map", height = "400px")
),
navset_card_tab(
full_screen = TRUE,
nav_panel("Total Household Income", highchartOutput("incomeOne_chart", height = "400px")),
nav_panel("Average Household Income", highchartOutput("incomeTwo_chart", height = "400px")),
nav_panel("Income Per Capita", highchartOutput("incomeThree_chart", height = "400px"))
)
),
layout_columns(
col_widths = c(8,4),
navset_card_tab(
full_screen = TRUE,
nav_panel("Total Household Expenditure", highchartOutput("expenditureOne_chart", height = "400px")),
nav_panel("Household Expenditure Distribution", highchartOutput("expenditureTwo_chart", height = "400px")),
nav_panel("Average Expenditure & Family Members", highchartOutput("expenditureThree_chart", height = "400px"))
),
card(
card_header("Income Source"),
highchartOutput("source_chart", height = "400px")
)
)
)
)
),
nav_panel(
title = "Dataset",
icon = icon("table"),
div(class = "page-header mb-4",
h2("Income & Expenditure Dataset Explorer", class = "header-title"),
p("Browse, filter, and download raw data from the Philippine Statistics Authority", class = 'text-center')
),
card(
card_header("Dataset"),
div(
class = "p-3",
DT::dataTableOutput("data_table")
)
)
),
nav_panel(
title = "About",
icon = icon("info-circle"),
div(class = "page-header mb-4",
h2("About the PIED Project", class = "header-title"),
p("Information and resources about the Philippine Income & Expenditure Dashboard", class = 'text-center')
),
card(
card_header("About PIED Dashboard"),
div(
class = "p-3",
h3("Philippine Income & Expenditure Dashboard"),
p("This dashboard provides visualization and analysis of household income and expenditure data in the Philippines."),
h4("Data Source"),
p("Data is sourced from the Philippine Statistics Authority's Family Income and Expenditure Survey."),
h4("Features"),
tags$ul(
tags$li("Interactive regional map visualization"),
tags$li("Income distribution charts by region"),
tags$li("Income source breakdown"),
tags$li("Detailed dataset view and download options")
),
h4("Contact"),
p("For questions or feedback, please contact us at example@pied.ph")
)
)
)
)
library(shiny)
library(bslib)
library(highcharter)
library(plotly)
library(leaflet)
library(fontawesome)
page_navbar(
title = "PIED",
theme = bs_theme(
version = 5,
base_font = font_google("DM Sans"),
primary = "#0d6efd",
bg = "#f8f9fa",
fg = "#212529"
),
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
nav_panel(
title = "Dashboard",
icon = icon("chart-line"),
layout_sidebar(
sidebar = sidebar(
title = "Filters",
width = 300,
selectInput("region", "Select Region:",
choices = c("All", "Luzon", "Visayas", "Mindanao"),
selected = "All"),
selectInput("family_type", "Type of Family:",
choices = c("All", "Extended Family", "Single Family", "Two or More Nonrelated Persons/Members"),
selected = "All"),
selectInput("head_sex", "Household Head Sex:",
choices = c("All", "Male", "Female"),
selected = "All"),
selectInput("building_type", "Type of Building/House:",
choices = c("Single House", "Duplex", "Commercial/industrial/agricultural building", "Multi-unit residential", "Institutional Living Quarter", "Other building unit (e.g. cave, boat)"),
selected = "All"),
hr(),
actionButton("apply_filters", "Apply Filters",
class = "btn-primary w-100")
),
# Main content needs to be here inside the layout_sidebar
div(
div(class = "page-header mb-4",
h2("Philippine Income & Expenditure Dashboard", class = "header-title"),
p("Interactive visualizations of household income and expenditure data", class = 'text-center')
),
div(
layout_columns(
col_widths = 12,
uiOutput("avg_household_income")
)
),
layout_columns(
col_widths = c(5, 7),
card(
card_header("Regional Map of Philippines"),
leafletOutput("map", height = "400px")
),
navset_card_tab(
full_screen = TRUE,
nav_panel("Total Household Income", highchartOutput("incomeOne_chart", height = "400px")),
nav_panel("Average Household Income", highchartOutput("incomeTwo_chart", height = "400px")),
nav_panel("Income Per Capita", highchartOutput("incomeThree_chart", height = "400px"))
)
),
layout_columns(
col_widths = c(8,4),
navset_card_tab(
full_screen = TRUE,
nav_panel("Total Household Expenditure", highchartOutput("expenditureOne_chart", height = "400px")),
nav_panel("Household Expenditure Distribution", highchartOutput("expenditureTwo_chart", height = "400px")),
nav_panel("Average Expenditure & Family Members", highchartOutput("expenditureThree_chart", height = "400px"))
),
card(
card_header("Income Source"),
highchartOutput("source_chart", height = "400px")
)
)
)
)
),
nav_panel(
title = "Dataset",
icon = icon("table"),
div(class = "page-header mb-4",
h2("Income & Expenditure Dataset Explorer", class = "header-title"),
p("Browse, filter, and download raw data from the Philippine Statistics Authority", class = 'text-center')
),
card(
card_header("Dataset"),
div(
class = "p-3",
DT::dataTableOutput("data_table")
)
)
),
nav_panel(
title = "About",
icon = icon("info-circle"),
div(class = "page-header mb-4",
h2("About the PIED Project", class = "header-title"),
p("Information and resources about the Philippine Income & Expenditure Dashboard", class = 'text-center')
),
card(
card_header("About PIED Dashboard"),
div(
class = "p-3",
h3("Philippine Income & Expenditure Dashboard"),
p("This dashboard provides visualization and analysis of household income and expenditure data in the Philippines."),
h4("Data Source"),
p("Data is sourced from the Philippine Statistics Authority's Family Income and Expenditure Survey."),
h4("Features"),
tags$ul(
tags$li("Interactive regional map visualization"),
tags$li("Income distribution charts by region"),
tags$li("Income source breakdown"),
tags$li("Detailed dataset view and download options")
),
h4("Contact"),
p("For questions or feedback, please contact us at example@pied.ph")
)
)
)
)
runApp()
current_data <- filtered_data()
filtered_data <- eventReactive(input$apply_filters, {
df <- data
if(input$family_type != "All") {
df <- df |> filter(`Type of Household` == input$family_type)
}
if(input$head_sex != "All") {
df <- df |> filter(`Household Head Sex` == input$head_sex)
}
if(input$building_type != "All") {
df <- df |> filter(`Type of Building/House` == input$building_type)
}
return(df)
}, ignoreNULL = FALSE)
current_data <- filtered_data()
current_data <- filtered_data()
runApp()
runApp()
ph_regions <- st_read("geoBoundaries-PHL-ADM1_simplified.geojson")
view(ph_regions)
View(ph_regions)
runApp()
runApp()
runApp()
runApp()
runApp()
View(ph_regions)
runApp()
lifecycle::last_lifecycle_warnings()
